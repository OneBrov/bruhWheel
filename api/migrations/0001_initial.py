# Generated by Django 3.2.5 on 2021-07-28 14:27

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Developer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('developer', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appid', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
                ('possitive_count', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, 'Count of reviews must be bigger than 1')])),
                ('negative_count', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, 'Count of reviews must be bigger than 1')])),
                ('owners_count', models.IntegerField()),
                ('ru_price', models.IntegerField()),
                ('metascore', models.IntegerField()),
                ('price', models.IntegerField()),
                ('bruh_points', models.IntegerField()),
                ('duration', models.FloatField()),
                ('hltb_link', models.CharField(max_length=100)),
                ('developer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.developer')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publisher', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Time_unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_unit', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_games', models.IntegerField()),
                ('duration_less', models.FloatField()),
                ('duration_more', models.FloatField()),
                ('ru_price_less', models.IntegerField()),
                ('ru_price_more', models.IntegerField()),
                ('genre_filter', models.ManyToManyField(blank=True, to='api.Genre')),
                ('tag_filter', models.ManyToManyField(blank=True, to='api.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='Rolled_games',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='genres',
            field=models.ManyToManyField(to='api.Genre'),
        ),
        migrations.AddField(
            model_name='game',
            name='label',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.label'),
        ),
        migrations.AddField(
            model_name='game',
            name='languages',
            field=models.ManyToManyField(to='api.Language'),
        ),
        migrations.AddField(
            model_name='game',
            name='publisher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.publisher'),
        ),
        migrations.AddField(
            model_name='game',
            name='tags',
            field=models.ManyToManyField(to='api.Tag'),
        ),
        migrations.AddField(
            model_name='game',
            name='time_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.time_unit'),
        ),
    ]
